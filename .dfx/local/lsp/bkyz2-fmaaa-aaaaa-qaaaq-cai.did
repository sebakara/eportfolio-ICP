type PersonalProfile = 
 record {
   address: text;
   country: text;
   created_by: nat;
   date_of_birth: text;
   email: text;
   firstname: text;
   gender: text;
   id: nat64;
   lastname: text;
   middlename: text;
   phone_number: text;
 };
type Item = 
 record {
   description: text;
   email: text;
   image: blob;
   password: text;
   title: text;
 };
type InstitutionOverview = 
 record {
   id: InstitutionId;
   item: Item;
 };
type InstitutionId = nat;
type InstitutionDetails = record {item: Item;};
type ExperienceInfo = 
 record {
   created_by: nat;
   end_date: text;
   position: text;
   profile_id: nat64;
   short_note: text;
   start_date: text;
 };
type CertificateInfo = 
 record {
   created_by: nat;
   description: text;
   end_date: text;
   isued_at: text;
   profile_id: nat64;
   start_date: text;
 };
/// Import the necessary libraries:
service : {
  /// Define a function to retrieve detailed info about an institution using its ID: 
  getInstitutionDetails: (InstitutionId) -> (InstitutionDetails) query;
  /// Define a function to retrieve all institutions: 
  /// Specific institutions can be separately retrieved by `getinstitutionDetail`:
  getOverviewList: () -> (vec InstitutionOverview) query;
  newCertificate: (CertificateInfo) -> ();
  newExperience: (ExperienceInfo) -> ();
  /// Define a function to register a new institution that is open for the defined duration:
  newInstitution: (Item) -> ();
  newProfile: (PersonalProfile) -> ();
}
